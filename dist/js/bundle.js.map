{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/controller.js","src/js/elements.js","src/js/helpers.js","src/js/main.js","src/js/model.js","src/js/movies.js","src/js/view.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","//jshint esversion: 6\nimport Model from './model'\nimport Elements from './elements'\nimport View from './view'\nimport {Movie, bindEvent} from './helpers'\n\nexport default function() {\n\n// Binds close button on every modal to close the respective modal\nlet modalCloseButtonArr = Array.from(Elements.modalCloseButton);\n  modalCloseButtonArr.forEach((button, i) => {\n    bindEvent(button, function() {\n      View.closeActiveModal(i);\n    });\n  });\n\n// Binds button to open modal for adding new movie\n  bindEvent(Elements.newMovieButton, View.displayNewMovieModal);\n\n// Handling of new movie\n  bindEvent(Elements.movieCreator, function(e) {\n    e.preventDefault();\n    let newMovie = new Movie(Elements.movieTitle.value, parseInt(Elements.movieYear.value), Elements.movieGenres.value.split(','), Elements.movieCover.value);\n    let index = Model.addMovie(newMovie);\n    View.renderNewMovie(newMovie, index);\n    bindEvent(Elements.movieCardContainer[index], function() {\n      View.openMovieView(index);\n    });\n    View.displayAllMovies();\n  }, 'submit');\n\n// Binding top rated\n  bindEvent(Elements.topRatedLink, function() {\n    let movie = Model.getTopRatedMovie();\n    View.displayMovie(movie);\n  });\n\n// Bind worst rated\n  bindEvent(Elements.worstRatedLink, function() {\n    let movie = Model.getWorstRatedMovie();\n    View.displayMovie(movie);\n  });\n\n// Call view function to display all movies\n  bindEvent(Elements.allMoviesLink, View.displayAllMovies);\n\n// Create click functions for all menu genre links\n  let genreLinkArr = Array.from(Elements.genreLinkName);\n  genreLinkArr.forEach(link => {\n    bindEvent(link, function() {\n      let genre = this.innerHTML.trim();\n      let movieArr = Model.getMoviesByGenre(genre);\n      View.displayMovies(movieArr);\n    });\n  });\n\n// Creating click function for year filter on menu\n  bindEvent(Elements.yearSort, View.displayYearInput);\n  bindEvent(Elements.movieYearInput, function() {\n      let year = this.value;\n      let movieArr = Model.getMoviesThisYear(year);\n      View.displayMovies(movieArr);\n    }, 'keyup');\n\n// Close movie preview when clicking on button\n  bindEvent(Elements.closeMovieButton, View.closeMovieView);\n\n// Click function to open movie sidebar view for all current movies in db\n  let movieCardArr = Array.from(Elements.movieCardContainer);\n  movieCardArr.forEach((card, index) => {\n    bindEvent(card, function() {\n      View.openMovieView(index);\n    });\n  });\n\n  // Open edit movie view\n  bindEvent(Elements.editButton, View.editMovieModal);\n\n  // Bind rating slider changes when editing movie\n  bindEvent(Elements.ratingSlider, View.displayRating, 'input');\n\n  // Preview active genres when editing movie\n  let genreChips = Array.from(Elements.genreEditChip);\n    genreChips.forEach(chip => {\n      bindEvent(chip, function() {\n        View.previewGenres(this);\n    });\n  });\n\n  // Submit changes to edited movie\n  bindEvent(Elements.submitEditButton, function(){\n    let genres = [];\n    let rating;\n    let title = Elements.modalTitle.innerHTML;\n    for (let activeGenres of Elements.genreEditChip) {\n      if (activeGenres.classList.contains('active')) {\n        genres.push(activeGenres.innerHTML.trim());\n      }\n    }\n    if (!Elements.newRatingCircle.innerHTML.includes('.')) {\n      rating = parseInt(Elements.ratingSlider.value);\n    }\n\n    Model.editMovie(genres, rating, title);\n    View.changeMovieHTML();\n  });\n\n}\n","// Module that contains all the html elemetns\n// This way. whenever a variable is declared in our app we know that is does not reference a html element\nmodule.exports = {\n    allMoviesLink : document.getElementById('all-movies-link'),\n    cardBody : document.getElementsByClassName('card-body'),\n    cardContainer : document.getElementById('card-container'),\n    cardMovieCover : document.getElementsByClassName('card-movie-cover'),\n    cardMovieGenre : document.getElementsByClassName('card-movie-genre'),\n    cardMovieRating : document.getElementsByClassName('card-movie-rating'),\n    cardMovieTitle : document.getElementsByClassName('card-movie-title'),\n    cardMovieYear : document.getElementsByClassName('card-movie-year'),\n    closeNewMovie : document.getElementById('close-new-movie'),\n    closeMovieButton : document.getElementById('close-movie-button'),\n    editButton : document.getElementById('edit-button'),\n    editModal : document.getElementById('edit-modal'),\n    genreChip : document.getElementsByClassName('genre-chip'),\n    genreContainer : document.getElementById('genre-container'),\n    genreEditChip : document.getElementsByClassName('genre-edit-chip'),\n    genreLabelCount : document.getElementsByClassName('genre-label-count'),\n    genreLinkName : document.getElementsByClassName('genre-link-name'),\n    // genreSuccess : document.getElementById('genre-success'),\n    inputs : document.querySelectorAll('input'),\n    listGenre : document.getElementsByClassName('list-genre'),\n    listRating : document.getElementsByClassName('list-rating'),\n    modalCloseButton : document.getElementsByClassName('modal-close-button'),\n    modalGenres : document.getElementById('modal-movie-genres'),\n    modalOpener : document.getElementsByClassName('modal-opener'),\n    modalPoster : document.getElementById('modal-movie-poster'),\n    modalRating : document.getElementById('modal-movie-rating'),\n    modals : document.getElementsByClassName('modal'),\n    modalTitle : document.getElementById('modal-movie-title'),\n    modalYear : document.getElementById('modal-movie-year'),\n    movieCards : document.getElementsByClassName('card'),\n    movieCardContainer : document.getElementsByClassName('movie-card-container'),\n    movieCover : document.forms.movieCreator.cover,\n    movieCreator : document.forms.movieCreator,\n    movieGenreInput : document.forms.movieGenreInput,\n    movieGenres : document.forms.movieCreator.genres,\n    movieModal : document.getElementById('movie-modal'),\n    moviePreview : document.getElementById('mySidenav'),\n    movieResult: document.getElementById('movie-result'),\n    movieTitle : document.forms.movieCreator.title,\n    movieYear : document.forms.movieCreator.year,\n    movieYearInput : document.getElementById('movie-year-input'),\n    newMovieButton : document.getElementById('new-movie-button'),\n    newMovieModal : document.getElementById('new-movie-modal'),\n    newRatingCircle : document.getElementById('new-rating-circle'),\n    newRatingSpan : document.getElementById('new-rating-span'),\n    ratingButton : document.getElementsByClassName('rating-button'),\n    ratingCirle : document.getElementById('rating-circle'),\n    ratingModal : document.getElementById('rating-modal'),\n    ratingSlider : document.getElementById('rating-slider'),\n    ratingSort : document.getElementById('rating-sort'),\n    submitEditButton : document.getElementById('submit-edit-button'),\n    titleSort : document.getElementById('title-sort'),\n    topRatedLink : document.getElementById('top-rated-link'),\n    worstRatedLink : document.getElementById('worst-rated-link'),\n    yearSort : document.getElementById('year-sort')\n};\n","//jshint esversion:6\nexport function getAverage(arr) {\n        let sum = 0;\n        if (arr.length !== 0) {\n        for (let i = 0; i < arr.length; i++) {\n          sum+= arr[i];\n        }\n        return (sum/arr.length).toFixed(1);\n        }\n        else {\n          return 'N/A';\n        }\n      }\n\n//CONSTRUCTOR THAT CREATEs MovieDb WITH PROPER PROPERTIES WHEN CALLED\n//SEPERATED FROM REST OF THE METHODS FOR CLARITY\nexport function Movie(title, year, genres, image) {\n    this.title = title;\n    this.year = year;\n    this.genres = genres;\n    this.ratings = [];\n    this.image = image || 'dist/pics/movie-placeholder.svg';\n}\n\nexport function bindEvent(target, callback, type = 'click', capture = false) {\n  target.addEventListener(type, callback, !!capture);\n}\n","//jshint esversion:6\nimport Model from './model'\nimport View from './view'\nimport Controller from './controller'\n// import './polyfills.js'\n// import {updateValue} from './watchers.js'\n\n/*\nTHIS APPPLICATION USES AN OBJECT LITERAL WITH A MIX OF PRIVACY STRUCTURE BETWEEN\nA CLASSIC MODULE PATTERN AND A REVEALING MODULE PATTERN. THE OBJECT LITERAL CONTAINS\nTHREE DIRECTLY BINDED PROPERTIES: \"ELEMENTS\", \"CONTSTRUCTOR\", \"METHODS\", WHO ALL\nCONTAIN PROPERTIES OF DIFFERENT PURPOSES TO MAKE A MORE LOGICAL API. THIS STRUCTURE\nWAS INSPIRED BY VUE.JS API, BUT CHANGED SINCE VUE HAS ITS OWN CONTEXTUAL BINDINGS.\nTHE BIGGEST ADVANTAGE WITH STRUCTURING AN OBJECT LITERAL WITH THREE MAIN PROPERTIES IS\nTWO-FOLD. FIRSTLY, THERE IS NO NEED TO REDECLARE VARIABLES OR BIND THEM DIRECTLY\nTO THE MAIN OBJECT. THEY ARE ALL ACCESSIBLE FROM THE OBJECT'S \"ELEMENT\" PROPERTY\nAND KEPT PRIVATE FROM THE OBJECTS METHODS AND CONSTRUCTOR. THE SECOND ADVANTAGE\nIS THAT THE CONTEXTUAL BINDING OF THE KEYWORD \"THIS\" ALWAYS POINTS TO ONE OF\nTHE THREE MAIN OBJECT PROPERTIES AND NOT THE MAIN OBJECT ITSELF. THE PURPOSE OF\nTHIS IS MAINLY TO MAKE ALL THE OBJECT'S METHODS EASILY ACCESSIBLE TO EACH OTHER.\nTHAT IS WHERE THE APP TAKES A SIMILAR APPROACH TO A REVEALING MODULE PATTERN.\nA DISADVANTAGE WITH THIS TYPE OF BINDING IS WHEN REFERENCING CROSS-PROPERTY (\nE.G. FROM \"ELEMENTS\" TO \"METHODS\") THE LINE OF EXECUTING CAN FEEL A BIT AWKWARD\nAND COMPLEX, AS YOU NEED TO REFER THROUGH OBJECT LITERAL NOTION. THIS IS\nSIMILAR TO A MORE CLASSIC MODULE PATTERN.\n*/\n\n//PROPER README TO BE INCLUDED IN NEXT DRAFT WITH CLEAR\n//INSTRUCTIONS ON HOW TO MAKE THE MOST OF ITS USE CASE.\n\n//CHECKS IF THE USER HAS AN EMPTY STORAGE AND SETS IT IF NEEDED\n//DB OF MovieDb ARE SET FROM AN ARRAY IN MovieDb.JS\n//SOMETIMES DOESN'T LOAD ON FIRST ATTEMPT AND THE USER NEEDS TO REFRESH PAGE\n//HAVE TRIED FIXING THIS BY SHIFITING LOADING ORDER OF SCRIPTS BUT TO NO\n//PERMANENT SOLUTION. WILL FIX IN NEXT DRAFT\n\n  if (typeof(Storage) !== \"undefined\") {\n    if(localStorage.getItem(\"0\") === null) {\n    Model.setInitialDb();\n    }\n  }\n  //INFORMS THE READER IF LOCAL STORAGE IS NOT SUPPORTED\n   else {\n      alert(\"Sorry! No Web Storage support available. Please consider switching to another browser.\");\n  }\n\nlet movieArr = Model.parseMovieArr();\n//CALLS FUNCTION TO RENDER THE INERFACE OF THE APP\nView.createMovieList(movieArr);\nController();\n","//jshint esversion:6\nimport MovieDb from './movies'\nimport {getAverage} from './helpers'\n// import './polyfills.js'\n// import {updateValue} from './watchers.js'\n\n//OBJECT LITERAL THAT CONTAINS APP\nexport default {\n\n      //Sets database first time app is run\n      setInitialDb() {\n        MovieDb.forEach((movie, index) => {\n          localStorage.setItem(index, JSON.stringify(movie));\n        });\n      },\n\n      //UPDATES THE LOCALSTORAGE LIST OF MovieDb. CALLED UPON WHENEVER THERE IS A CHANGE\n      //WOULD LIKE TO AUTOMATE THIS THROUGH A WATCHER OR OBSERVER OF SOME KIND TO\n      //AVOID CONSTANT CALLING. WILL ATTEMPT IN NEXT DRAFT\n      // setMovieDb () {\n      //   return localStorage.setItem(\"MovieDb\", JSON.stringify(Elements.movieList));\n      // },\n      //ADDS A NEW MOVIE THROUGH THE CONSTRUCTOR AND PUSHES IT INTO THE MOVIE ARRAY\n      //CALLS FUNCTIONS TO UPDATE LOCAL STORAGE AND MOVIE TABLE INTERFACE\n      //USER WILL BE ABLE TO PROVIDE IMAGE COVER OF MOVIE IN NEXT DRAFT\n      addMovie(movie) {\n        let index = localStorage.length;\n        localStorage.setItem(index, JSON.stringify(movie));\n        return index;\n      },\n      //UPDATES MOVIE RATING BASED ON USER INPUT AND\n      //PUSHES THE RATING OF THE CHOSEN MOIVE INTO MOVIE ARRAY AND UPDATES LOCAL STORAGE.\n      //CREATES A VISUAL EFFECT IN THE MODAL WHEN RATING IS UPDATED\n      //BINDS INNERHTML OF TABLE AND MODAL COMPONENT SO THAT A FUNCTION IS NOT NEEDED TO RENDER\n      editMovie(genres, rating, title) {\n        for (let key in localStorage) {\n          let movie = JSON.parse(localStorage[key]);\n          if (movie.title === title) {\n            movie.genres = genres;\n            if (rating !== undefined) {\n            movie.ratings.push(rating);\n            }\n          return localStorage.setItem(key, JSON.stringify(movie));\n          }\n\n        }\n        let movieArr = this.parseMovieArr();\n        let index = movieArr.map(movie => {\n          if (movie.title === title) {\n            return movie;\n          }\n        });\n      },\n      editGenre(index, newVal) {\n        let movie = JSON.parse(localStorage[index]);\n        movie.genres = newVal;\n        return localStorage.setItem(JSON.stringify(index), JSON.stringify(movie));\n        },\n      editRating(index, newVal) {\n        let movie = JSON.parse(localStorage[index]);\n        movie.ratings.push(newVal);\n        return localStorage.setItem(JSON.stringify(index), JSON.stringify(movie));\n        },\n      //CALCULATE AVERAGE RATING OF RATING ARRAY FOR DISPLAY PURPOSES\n      //ALSO SETS A STANDARD VALUE OF N/A IF NO RATING IS FOUND\n      parseMovieArr() {\n        let movieArr = [];\n        for (let key in localStorage) {\n          movieArr.push(JSON.parse(localStorage[key]));\n        }\n        return movieArr;\n      },\n      //CHECKS FOR TOP RATED MOVIE BY COMPARING EACH MOVIE'S RATING AND SORTING\n      //ACCORDINGLY.\n      //PREVENTS MovieDb WITH ONE OR LESS RATING TO BE DISPLAYED\n      getTopRatedMovie() {\n        let movieArr = this.parseMovieArr();\n        let multipleRatings = movieArr.filter(movie => movie.ratings.length > 1);\n        let topRated = multipleRatings.reduce(\n          (prevVal, currVal) =>\n          getAverage(prevVal.ratings) > getAverage(currVal.ratings)\n          ? prevVal\n          : currVal\n        );\n        return topRated;\n      },\n      //BASICALLY THE SAME FUNCTION AS ABOVE, JUST WITH A REVERSED SORTING ORDER\n      getWorstRatedMovie() {\n        let movieArr = this.parseMovieArr();\n        let multipleRatings = movieArr.filter(movie => movie.ratings.length > 1);\n        let worstRated = multipleRatings.reduce(\n          (prevVal, currVal) =>\n          getAverage(prevVal.ratings) < getAverage(currVal.ratings)\n          ? prevVal\n          : currVal\n        );\n        return worstRated;\n    },\n    //FINDS MovieDb THAT MATCHES THE SELECTED YEAR AND HIDES THE OTHERS\n      getMoviesThisYear(movieYear) {\n        let movieArr = this.parseMovieArr();\n        console.log(movieArr);\n            return movieArr.filter(\n              (movie, index) =>\n              movie.year === parseInt(movieYear)\n            );\n      },\n      //VERY SIMILIAR TO THE ABOVE FILTER FUNCTION, JUST A SLIGHT CHANGE IN SYNTAX\n      //AS GENRES PROP IS AN ARRAY THAT CAN CONTAIN MULTIPLE VALUES\n      getMoviesByGenre(movieGenre) {\n        let movieArr = this.parseMovieArr();\n        let genreArr = movieArr.filter(\n          (movie, index) =>\n          movie.genres.includes(movieGenre)\n        );\n        return genreArr;\n      },\n\n\n};\n","module.exports =\n[\n  {\n          title: \"Dawn of the Planet of the Apes\",\n          image: \"http://api.androidhive.info/json/movies/1.jpg\",\n          ratings: [8, 7, 6, 5, 10],\n          year: 2014,\n          genres: [\"Action\", \"Drama\", \"Sci-Fi\"]\n      },\n      {\n          title: \"District 9\",\n          image: \"http://api.androidhive.info/json/movies/2.jpg\",\n          ratings: [6, 5, 8, 8, 9],\n          year: 2009,\n          genres: [\"Action\", \"Sci-Fi\", \"Thriller\"]\n      },\n      {\n          title: \"Transformers: Age of Extinction\",\n          image: \"http://api.androidhive.info/json/movies/3.jpg\",\n          ratings: [5, 5, 3, 2, 7],\n          year: 2014,\n          genres: [\"Action\", \"Adventure\", \"Sci-Fi\"]\n      },\n      {\n          title: \"X-Men: Days of Future Past\",\n          image: \"http://api.androidhive.info/json/movies/4.jpg\",\n          ratings: [8, 9, 7, 7],\n          year: 2014,\n          genres: [\"Action\", \"Sci-Fi\", \"Thriller\"]\n      },\n      {\n          title: \"The Machinist\",\n          image: \"http://api.androidhive.info/json/movies/5.jpg\",\n          ratings: [7, 7, 8, 8, 6, 6, 7, 8],\n          year: 2004,\n          genres: [\"Drama\", \"Thriller\"]\n      },\n      {\n          title: \"The Last Samurai\",\n          image: \"http://api.androidhive.info/json/movies/6.jpg\",\n          ratings: [7, 7, 6, 5, 2, 9, 8],\n          year: 2003,\n          genres: [\"Action\", \"Drama\", \"History\"]\n      },\n      {\n          title: \"The Amazing Spider-Man 2\",\n          image: \"http://api.androidhive.info/json/movies/7.jpg\",\n          ratings: [7, 5, 3, 2, 8, 9],\n          year: 2014,\n          genres: [\"Action\", \"Adventure\", \"Fantasy\"]\n      },\n      {\n          title: \"Tangled\",\n          image: \"http://api.androidhive.info/json/movies/8.jpg\",\n          ratings: [7, 8, 3, 6, 8],\n          year: 2010,\n          genres: [\"Action\", \"Drama\", \"Sci-Fi\"]\n      },\n      {\n          title: \"Rush\",\n          image: \"http://api.androidhive.info/json/movies/9.jpg\",\n          ratings: [8, 8, 9, 7],\n          year: 2013,\n          genres: [\"Animation\", \"Comedy\", \"Family\"]\n      },\n      {\n          title: \"Drag Me to Hell\",\n          image: \"http://api.androidhive.info/json/movies/10.jpg\",\n          ratings: [6, 6, 7, 7],\n          year: 2009,\n          genres: [\"Horror\", \"Thriller\"]\n      },\n      {\n          title: \"Despicable Me 2\",\n          image: \"http://api.androidhive.info/json/movies/11.jpg\",\n          ratings: [9, 9, 3, 7, 8],\n          year: 2013,\n          genres: [\"Animation\", \"Comedy\", \"Family\"]\n      },\n      {\n          title: \"Kill Bill: Vol. 1\",\n          image: \"http://api.androidhive.info/json/movies/12.jpg\",\n          ratings: [4, 8, 8, 9, 3],\n          year: 2003,\n          genres: [\"Action\", \"Crime\"]\n      },\n      {\n          title: \"A Bug's Life\",\n          image: \"http://api.androidhive.info/json/movies/13.jpg\",\n          ratings: [7, 7, 7, 5, 5],\n          year: 1998,\n          genres: [\"Animation\", \"Adventure\", \"Comedy\"]\n      },\n      {\n          title: \"Life of Brian\",\n          image: \"http://api.androidhive.info/json/movies/14.jpg\",\n          ratings: [9, 9, 4, 5, 8],\n          year: 1972,\n          genres: [\"Comedy\"]\n      },\n      {\n          title: \"How to Train Your Dragon\",\n          image: \"http://api.androidhive.info/json/movies/15.jpg\",\n          ratings: [6, 9, 8, 7, 5, 8],\n          year: 2010,\n          genres: [\"Animation\", \"Adventure\", \"Family\"]\n      }\n];\n","//jshint esversion:6\nimport Elements from './elements'\nimport {getAverage, bindEvent} from './helpers'\n\n\nexport default {\n\n  //CREATES A TABLE OF THE MovieDb IN THE DB AS THE INTERFACE FOR THE USER TO NAVIGATE\n  //CALLED EACH TIME A NEW MOVIE IS ADDED\ncreateMovieList(movieArr) {\n  Elements.cardContainer.innerHTML = '';\n    for(let movie of movieArr) {\n      Elements.cardContainer.innerHTML +=\n    `<div class=\"column col-3 movie-card-container\">\n       <div class=\"card\">\n          <div class=\"card-image\">\n            <img class=\"img-responsive card-movie-cover\">\n          </div>\n          <div class=\"card-header\">\n            <h4 class=\"card-title card-movie-title\"></h4>\n            <h6 class=\"card-meta card-movie-year\"></h6>\n          </div>\n          <div class=\"card-body card-movie-genre\"></div>\n          <div class=\"card-footer\">\n            <div class=\"bar\">\n              <div class=\"bar-item card-movie-rating\"></div>\n            </div>\n          </div>\n      </div>\n    </div>`;\n    }\n\n    // Sets values for each movie inside card elements\n    for(let i = 0; i < movieArr.length; i++) {\n        Elements.cardMovieCover[i].src = movieArr[i].image || 'dist/pics/movie-placeholder.svg';\n        Elements.cardMovieTitle[i].innerHTML = movieArr[i].title;\n        Elements.cardMovieYear[i].innerHTML = movieArr[i].year;\n        Elements.cardMovieRating[i].style.width = `${getAverage(movieArr[i].ratings)* 10}%`;\n        Elements.cardMovieRating[i].innerHTML = `${getAverage(movieArr[i].ratings)}`;\n        for (let genre of movieArr[i].genres) {\n          Elements.cardMovieGenre[i].innerHTML +=  `<label class=\"chip genre-chip\">${genre}</label>`;\n        }\n    }\n  },\n\n  // Opens sidebar for selected movie\n  openMovieView(index) {\n    Elements.moviePreview.style.width = \"600px\";\n    Elements.modalTitle.innerHTML = Elements.cardMovieTitle[index].innerHTML;\n    Elements.modalYear.innerHTML = Elements.cardMovieYear[index].innerHTML;\n    Elements.modalPoster.src = Elements.cardMovieCover[index].src;\n    Elements.modalGenres.innerHTML = Elements.cardMovieGenre[index].innerHTML;\n    Elements.modalRating.innerHTML = Elements.cardMovieRating[index].innerHTML;\n    Elements.ratingCirle.className = `c100 p${parseInt(Elements.modalRating.innerHTML) * 10}`;\n  },\n\n  // Closes sidebar for current movie\n  closeMovieView() {\n    Elements.moviePreview.style.width = \"0\";\n  },\n\n  // Displays edit modal for current movie\n  editMovieModal() {\n    let movieGenres = Array.from(Elements.modalGenres.childNodes);\n    let genreChips = Array.from(Elements.genreEditChip);\n    Elements.editModal.classList.add('active');\n    Elements.newRatingSpan.innerHTML = Elements.modalRating.innerHTML;\n    Elements.newRatingCircle.classList = Elements.ratingCirle.classList;\n    Elements.ratingSlider.value = 0;\n\n    // Clears any active states if user has selected genres without submiting them\n    genreChips.forEach(chip => {\n      if (chip.classList.contains('active'))\n      chip.classList.remove('active');\n    });\n\n    // Adds active state to current movie's genres\n    movieGenres.forEach(genre => {\n      genreChips.map(chip => {\n        if (chip.innerHTML === genre.innerHTML)\n        chip.classList.add('active');\n      });\n    });\n  },\n\n  // Display new movie genres and rating after editing\n  changeMovieHTML() {\n    let movieGenres = Array.from(Elements.modalGenres.childNodes);\n    let genreChips = Array.from(Elements.genreEditChip);\n    Elements.editModal.classList.remove('active');\n    Elements.modalGenres.innerHTML = '';\n    genreChips.forEach(chip => {\n        if (chip.classList.contains('active')) {\n          Elements.modalGenres.innerHTML +=  `<label class=\"chip genre-chip\">${chip.innerHTML}</label>`;\n        }\n      });\n      for (let i = 0; i < Elements.cardMovieTitle.length; i++) {\n        if (Elements.cardMovieTitle[i].innerHTML === Elements.modalTitle.innerHTML) {\n          Elements.cardMovieGenre[i].innerHTML = Elements.modalGenres.innerHTML;\n          }\n        }\n\n        // Rating changes to go here\n  },\n\n  // Close current active modal\n  closeActiveModal(i) {\n    Elements.modals[i].classList.remove('active');\n  },\n\n  // Display function for top rated and worst rated\n  displayMovie(movie) {\n    let titleCardArr = Array.from(Elements.cardMovieTitle);\n      titleCardArr.filter((title, i) =>\n        movie.title === title.innerHTML\n        ? Elements.movieCardContainer[i].style.display = \"block\"\n        : Elements.movieCardContainer[i].style.display = \"none\"\n    );\n  },\n  // Display function used to display by genre or year\n  displayMovies(arr) {\n    let titleCardArr = Array.from(Elements.cardMovieTitle);\n    let movieTitleArr = arr.map(movie =>\n      movie.title\n    );\n      titleCardArr.filter((title, i) =>\n        movieTitleArr.includes(title.innerHTML)\n        ? Elements.movieCardContainer[i].style.display = \"block\"\n        : Elements.movieCardContainer[i].style.display = \"none\"\n    );\n  },\n\n  // Display movie modal for adding movie\n  displayNewMovieModal() {\n    Elements.newMovieModal.classList.add('active');\n    Elements.movieTitle.focus();\n    Elements.movieTitle.select();\n  },\n\n  // Visually changes rating circle as slider value changes\n  displayRating() {\n      Elements.newRatingSpan.innerHTML = this.value;\n      Elements.newRatingCircle.className = `c100 p${this.value * 10}`;\n  },\n  // Shows input field for year search\n  displayYearInput() {\n    Elements.movieYearInput.classList.remove('hide');\n    Elements.movieYearInput.focus();\n    Elements.movieYearInput.select();\n    bindEvent(document.body, e => {\n      if (e.target !== this) {\n        Elements.movieYearInput.classList.add('hide');\n      }\n    });\n  },\n\n  // Display all movie cards\n  displayAllMovies() {\n    let movieCardArr = Array.from(Elements.movieCardContainer);\n    return movieCardArr.forEach(card =>\n      card.style.display = \"block\"\n    );\n  },\n\n  //Prevents blank space as first character in all input fields\n  blockWhiteSpace() {\n  for (let input of Elements.inputs) {\n    input.addEventListener(\"keydown\", function(event) {\n      if (event.which === 32 && event.target.selectionStart === 0) {\n          event.preventDefault();\n        }\n      });\n    }\n  },\n\n  // Renders HTML for new movie\n  renderNewMovie (newMovie, i) {\n    const movieCard = document.createElement('div');\n    movieCard.setAttribute('class', 'column col-3 movie-card-container');\n    movieCard.innerHTML = `<div class=\"card\">\n          <div class=\"card-image\">\n            <img class=\"img-responsive card-movie-cover\">\n          </div>\n          <div class=\"card-header\">\n            <h4 class=\"card-title card-movie-title\"></h4>\n            <h6 class=\"card-meta card-movie-year\"></h6>\n          </div>\n          <div class=\"card-body card-movie-genre\"></div>\n          <div class=\"card-footer\">\n            <div class=\"bar\">\n              <div class=\"bar-item card-movie-rating\"></div>\n            </div>\n          </div>\n      </div>\n    </div>`;\n\n    Elements.cardContainer.appendChild(movieCard);\n\n    Elements.cardMovieCover[i].src = newMovie.image || 'dist/pics/movie-placeholder.svg';\n    Elements.cardMovieTitle[i].innerHTML = newMovie.title;\n    Elements.cardMovieYear[i].innerHTML = newMovie.year;\n    Elements.cardMovieRating[i].style.width = `${getAverage(newMovie.ratings)* 10}%`;\n    Elements.cardMovieRating[i].innerHTML = `${getAverage(newMovie.ratings)}`;\n    for (let genre of newMovie.genres) {\n      Elements.cardMovieGenre[i].innerHTML +=  `<label class=\"chip\">${genre}</label>`;\n    }\n\n    Elements.newMovieModal.classList.remove('active');\n  },\n\n  // Previews genres for user when editing movie\n  previewGenres(genre) {\n        if (!genre.classList.contains('active')) {\n           genre.classList.add('active');\n        }\n        else {\n          genre.classList.remove('active');\n        }\n    }\n\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}